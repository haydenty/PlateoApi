function genToken(s){var e=expiresIn(7),t=jwt.encode({exp:e,user:s},require("../middlewares/secret.js")());return{token:t,expires:e,user:s}}function expiresIn(s){var e=new Date;return e.setDate(e.getDate()+s)}function areCredentialsValid(s,e,t){MongoClient.connect(constants.dbConnection,function(r,n){if(r);else{var o=n.collection("users"),a={username:{$eq:s},password:{$eq:e}};o.find(a).toArray(function(s,e){t(s?!1:0!==e.length?!0:!1),n.close()})}})}module.exports=function(){return"asdf_hugesecret"};var jwt=require("jwt-simple"),usersManager=require("../routes/users.js");module.exports=function(s,e,t){var r=s.headers["x-access-token"];if(!r)return e.status(401),void e.json({status:401,message:"Invalid Token or Key"});try{var n=jwt.decode(r,require("./secret.js")());if(n.exp<=Date.now())return e.status(400),void e.json({status:400,message:"Token Expired"});usersManager.doesUsernameExist(n.user,function(r){return r.doesExist?s.url.indexOf("/api/v1/")>=0?void t():(e.status(403),void e.json({status:403,message:"Not Authorized"})):(e.status(401),void e.json({status:401,message:"Invalid User"}))})}catch(o){e.status(500),e.json({status:500,message:"Oops something went wrong",error:o})}};var jwt=require("jwt-simple"),MongoClient=require("mongodb").MongoClient,constants=require("../shakaApi/constants.js"),userManager=require("./users.js"),auth={login:function(s,e){var t=s.body.username||"",r=s.body.password||"";""!==t||""!==r?areCredentialsValid(t,r,function(s){s?e.json({token:genToken(t),message:"login success"}):(e.status(401),e.json({status:401,message:"Invalid credentials!!"}))}):(e.status(401),e.json({status:401,message:"Invalid credentials!!"}))},register:function(s,e){var t=s.body;t.email.indexOf("@")>-1&&t.email.indexOf(".com")>-1?t.pass===t.verPass?t.pass.length>=6?userManager.createUser(t,function(s){401!==s.status?e.json({token:genToken(t.username),message:"register success"}):(e.status(401),e.json(s))}):(e.status(401),e.json({status:401,message:"Make sure your password is at least 6 characters long."})):(e.status(401),e.json({status:401,message:"Passwords do not match."})):(e.status(401),e.json({status:401,message:"Invalid email."}))}};module.exports=auth;var MongoClient=require("mongodb").MongoClient,constants=require("../shakaApi/constants.js"),drops={createDrop:function(s,e){MongoClient.connect(constants.dbConnection,function(t,r){var n=r.collection("drops");t?(e.status(401),e.json({status:401,message:"Database connection issues, sorry try again.",errors:t})):n.insert(s.body,function(s,t){s?(e.status(401),e.json({status:401,message:"We messed up trying to create your drop, sorry try again.",errors:s})):e.json({}),r.close()})})},getAllDrops:function(s,e){MongoClient.connect(constants.dbConnection,function(s,t){var r=t.collection("drops");s?(e.status(401),e.json({status:401,message:"Database connection issues, sorry try again.",errors:s})):r.find().toArray(function(s,r){s?(e.status(401),e.json({status:401,message:"We messed up trying to get all the drops.",errors:s})):e.json(r),t.close()})})},getDropsForUser:function(s,e){var t=s.params.id;MongoClient.connect(constants.dbConnection,function(s,r){var n=r.collection("drops");if(s)e.status(401),e.json({status:401,message:"Database connection issues, sorry try again.",errors:s});else{var o={_id:{$eq:t}};n.find(o).toArray(function(s,t){s?(e.status(401),e.json({status:401,message:"We messed up trying to get all the drops for that user.",errors:s})):e.json(t),r.close()})}})}};module.exports=drops;var express=require("express"),router=express.Router(),auth=require("./auth.js"),users=require("./users.js"),drops=require("./drops.js");router.post("/login",auth.login),router.post("/register",auth.register),router.get("/api/v1/users",users.getAllUsers),router.post("/api/v1/drops/",drops.createDrop),router.get("/api/v1/drops/",drops.getAllDrops),router.get("/api/v1/drops/:id",drops.getDropsForUser),module.exports=router;var MongoClient=require("mongodb").MongoClient,constants=require("../shakaApi/constants.js"),users={getAllUsers:function(s,e){MongoClient.connect(constants.dbConnection,function(s,t){if(s)e.status(401),e.json({status:401,message:"Database connection issues, sorry try again.",errors:s});else{var r=t.collection("users");r.find().toArray(function(s,r){s?(e.status(401),e.json({status:401,message:"We messed up trying to get all the users.",errors:s})):e.json(r),t.close()})}})},getFriends:function(s,e){e.json([{name:"Martha"},{name:"Sammy"}])},createUser:function(s,e){this.doesUsernameExist(s.username,function(t){if(t.doesExist)e({status:401,message:"Username is not unique."});else{var r={username:s.username,email:s.email,password:s.pass};MongoClient.connect(constants.dbConnection,function(s,t){if(s)e({status:401,message:"Database connection issues, sorry try again.",errors:s});else{var n=t.collection("users");n.insert(r,function(s,r){e(null!==s?{status:401,message:"We messed up trying to create the user account.",errors:s}:{userId:r.ops[0]._id}),t.close()})}})}})},doesUsernameExist:function(s,e){MongoClient.connect(constants.dbConnection,function(t,r){if(t)e({isUnique:!1,message:"Database connection issues, sorry try again.",errors:t});else{var n=r.collection("users"),o={username:{$eq:s}};n.find(o).toArray(function(s,n){e(s?{isUnique:!1,message:"We made a mistake in checking for unique username, sorry try again.",errors:t}:0===n.length?{doesExist:!1,message:"The given username is unique."}:{doesExist:!0,message:"A user already exists with that username.",errors:s}),r.close()})}})}};module.exports=users;var constants={dbConnection:"mongodb://localhost:27017/test"};module.exports=constants;var express=require("express"),bodyParser=require("body-parser"),app=express();app.use(bodyParser.json()),app.all("/*",function(s,e,t){e.header("Access-Control-Allow-Origin","*"),e.header("Access-Control-Allow-Methods","GET,PUT,POST,DELETE,OPTIONS"),e.header("Access-Control-Allow-Headers","Content-type,Accept,X-Access-Token,X-Key"),"OPTIONS"==s.method?e.status(200).end():t()}),app.all("/api/v1/*",[require("../middlewares/validateRequest.js")]),app.use("/",require("../routes")),app.use(function(s,e,t){var r=new Error("Not Found");r.status=404,t(r)}),app.set("port",3e3);var server=app.listen(app.get("port"),function(){});